name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  SecurityCheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run npm audit for vulnerabilities
        run: npm audit

      - name: Run ESLint for code quality
        run: npx eslint .

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      # Optional: Run CodeQL analysis for advanced security scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  Init:
    runs-on: ubuntu-latest
    needs: SecurityCheck
    steps:
      - uses: actions/checkout@v3
      - name: AWS Init
        run: echo "Initializing AWS deployment..."

  Build:
    runs-on: ubuntu-latest
    needs: Init
    steps:
      - uses: actions/checkout@v3
      - name: Generate deployment package
        run: zip -r deploy.zip * -x "*.git*"
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-zip
          path: deploy.zip

  Stage:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v3
      - name: AWS Stage
        run: echo "Staging AWS deployment..."

  Deploy:
    runs-on: ubuntu-latest
    needs: Stage
    steps:
      - uses: actions/checkout@v3
      - name: Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: deploy-zip
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-cloud-cicd-demo
          environment_name: multi-cloud-cicd-demo-env
          region: ap-south-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 60
