name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  security_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Run Vulnerability Scan (npm audit)
        run: npm audit

      - name: Run ESLint for Code Quality
        run: npx eslint .

      - name: Run Tests with Coverage
        run: npm test -- --coverage

  sonarcloud:
    runs-on: ubuntu-latest
    needs: security_quality
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Version
        run: java -version

      - name: Download SonarScanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip -d sonar-scanner

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./sonar-scanner/sonar-scanner-cli-4.8.0.2856-linux/bin/sonar-scanner \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName=multi-cloud-cicd-demo \
            -Dsonar.sources=. \
            -Dsonar.java.jdkHome=$JAVA_HOME

  Init:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v3
      - name: AWS Init
        run: echo "Initializing AWS deployment..."

  Build:
    runs-on: ubuntu-latest
    needs: Init
    steps:
      - uses: actions/checkout@v3
      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "*.git*"
      - name: Upload Deployment Package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-zip
          path: deploy.zip

  Stage:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v3
      - name: AWS Stage
        run: echo "Staging AWS deployment..."

  Deploy:
    runs-on: ubuntu-latest
    needs: Stage
    steps:
      - uses: actions/checkout@v3
      - name: Download Deployment Package
        uses: actions/download-artifact@v4
        with:
          name: deploy-zip
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-cloud-cicd-demo
          environment_name: multi-cloud-cicd-demo-env
          region: ap-south-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 60
