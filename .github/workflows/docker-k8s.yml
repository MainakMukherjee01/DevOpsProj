name: Build and Deploy with Docker and K3d

on:
  push:
    branches: [ dockerize ]

jobs:
  SecurityQuality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for SonarCloud analysis

      - name: Install Dependencies
        run: npm install

      - name: Run Vulnerability Scan (npm audit)
        run: npm audit

      - name: Run ESLint for Code Quality
        run: npx eslint .

      - name: Run Tests with Coverage
        run: npm test -- --coverage
        
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  Build:
    runs-on: ubuntu-latest
    needs: SecurityQuality
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Set lowercase repository name
        id: setrepo
        run: echo "REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  DeployVerifyTest:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v3
      
      # Install K3d (lightweight Kubernetes for dev/test)
      - name: Install K3d
        run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
      
      # Create a local K3d cluster
      - name: Create K3d cluster
        run: k3d cluster create test-cluster
      
      # Configure kubectl to use the K3d cluster
      - name: Get kubeconfig
        run: |
          mkdir -p ~/.kube
          k3d kubeconfig get test-cluster > ~/.kube/config

      - name: Set lowercase repository name
        id: setrepo
        run: echo "REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
      # Update the image in the Kubernetes manifest
      - name: Update manifest
        run: |
          echo "Updating Kubernetes manifest with the new image..."
          sed -i 's|IMAGE_TO_REPLACE|ghcr.io/${{ env.REPO }}:${{ github.sha }}|g' k8s/deployment.yaml
          echo "Kubernetes manifest updated successfully."

      - name: Generate SECRET_KEY
        run: |
          kubectl create secret docker-registry regcred \
          --docker-server=ghcr.io \
          --docker-username=${{ github.actor }} \
          --docker-password=${{ secrets.GHCR_TOKEN }} \
          --docker-email=${{ github.actor.email }}
      
      # Apply the Kubernetes manifests
      - name: Deploy to K3d
        run: |
          echo "Applying Kubernetes manifests..."
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          echo "Kubernetes manifests applied successfully."
      
      # Wait for the deployment to become ready
      - name: Wait for deployment
        run: |
          kubectl get pods
          kubectl rollout status deployment/nodejs-app --timeout=60s
          POD=$(kubectl get pods -l app=nodejs-app -o jsonpath="{.items[0].metadata.name}")
          echo "Pod name: $POD"
          kubectl describe pod $POD

      - name: Test the application
        run: |
          kubectl port-forward svc/nodejs-app-service 3000:80 &
          sleep 5
          npm install
          curl -s http://localhost:3000/health
          curl -s http://localhost:3000/
          npm test -- --coverage
          echo "Application tests completed."
      
      # Clean up
      - name: Clean up K3d cluster
        run: k3d cluster delete test-cluster

  